C51 COMPILER V7.09   UART                                                                  12/31/2012 14:48:45 PAGE 1   


C51 COMPILER V7.09, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\OUT\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE uart.c LARGE BROWSE INCDIR(include;mcu) DEBUG OBJECTEXTEND PRINT(.\OUT\uart
                    -.lst) OBJECT(.\OUT\uart.obj)

line level    source

   1          #include "iicprocess.h"
   2          #include "typedef.h"
   3          #include "at24C01.h"
   4          #include "ledStatus.h"
   5          #include "uart.h"
   6          #include "timer.h"
   7          
   8          UART_INFO uart1;
   9          
  10          void uart_init(void)
  11          {
  12   1              uart1.uartState = 0;
  13   1          uart1.rxLen     = 0;
  14   1          uart1.txLen     = 0;
  15   1          uart1.txPtr     = uart1.ackBuffer;
  16   1      
  17   1          SCON0 = SCON_INIT;
  18   1          TMOD  = (TMOD & 0x0F) | TIME1_INIT;
  19   1          TH1   = UART_CLK;   
  20   1      
  21   1          ES0   = 1;        /*允许串口中断*/
  22   1          TR1   = 1;        /*波特率发生器工作*/
  23   1          
  24   1          REN0  = 1;        /*允许接收数据*/
  25   1      }
  26          
  27          // 每10ms在定时器中断中调用一次
  28          void uart1_timeout(void)
  29          {
  30   1              if(uart1.rxTimer)
  31   1                      uart1.rxTimer--;
  32   1              
  33   1              if(uart1.rxTimer==0 && uart1.uartState!=UART_RX_FRAME_OK)
  34   1              {
  35   2                      uart1.uartState = 0;
  36   2                      uart1.rxLen     = 0;
  37   2                      REN0            = 1;
  38   2              }
  39   1              
  40   1              if(uart1.txTimer)
  41   1                      uart1.txTimer--;
  42   1      }
  43          
  44          // 串口发送数据
  45          void uart1_tran_enable(void)
  46          {
  47   1              uart1.txTimer = UART_TX_FRAME_DELAY;
  48   1              TI0           = 1;
  49   1      }
  50          
  51          // 串口接收中断函数
  52          void ISRuart(void) interrupt 4
  53          {
  54   1              unsigned char uart1Temp;
C51 COMPILER V7.09   UART                                                                  12/31/2012 14:48:45 PAGE 2   

  55   1              
  56   1              if(RI0)
  57   1              {
  58   2                      RI0 = 0;
  59   2                      uart1.rxTimer = UART_RX_BYTE_INTERVAL;
  60   2                      uart1Temp = SBUF0;
  61   2      
  62   2                      switch(uart1.uartState)
  63   2                      {
  64   3                              case UART_SYNC1:
  65   3                                      if(uart1Temp == UART_SYNC1_DEVICE)
  66   3                                      {
  67   4                                              uart1.uartState = UART_SYNC2;
  68   4                                              uart1.rxPtr     = uart1.rxBuffer;
  69   4                                              *uart1.rxPtr++  = uart1Temp;
  70   4      
  71   4                                              uart1.txData    = uart1.ackBuffer + 6;
  72   4                                              uart1.rxData    = uart1.rxBuffer + 6;
  73   4                                      }
  74   3                                      break;
  75   3      
  76   3                              case UART_SYNC2:
  77   3                                      if(uart1Temp == UART_SYNC2_DEVICE)
  78   3                                      {
  79   4                                              uart1.uartState ++;
  80   4                                              *uart1.rxPtr ++ = uart1Temp;    
  81   4                                      }
  82   3                                      else if(uart1Temp == UART_SYNC1_DEVICE)
  83   3                                      {
  84   4                                              uart1.uartState = UART_SYNC2;
  85   4                                              uart1.rxPtr     = uart1.rxBuffer;
  86   4                                              *uart1.rxPtr++  = uart1Temp;
  87   4                                      }
  88   3                                      else 
  89   3                                              uart1.uartState = UART_SYNC1;
  90   3                                      break;
  91   3      
  92   3                              case TMU_NUMBER:
  93   3                                      *uart1.rxPtr++ = uart1Temp;
  94   3                                      uart1.uartState ++;
  95   3                                      break;
  96   3      
  97   3                              case ALL_DATA_LENGTH:
  98   3                                      uart1.rxLen    = uart1Temp - 4;
  99   3                                      *uart1.rxPtr++ = uart1Temp;
 100   3                                      uart1.uartState++;
 101   3                                      break;                          
 102   3      /*
 103   3                              case MESSAGE_TYPE:
 104   3                                      *uart1.rxPtr++ = uart1Temp;
 105   3                                      uart1.uartState++;
 106   3                                      break;
 107   3      
 108   3                              case COMMAND_CODE:
 109   3                                      *uart1.rxPtr++ = uart1Temp;
 110   3                                      uart1.uartState++;
 111   3                                      break;
 112   3      */
 113   3                              case DATE_CONTENT_AND_FCS:
 114   3                                      *uart1.rxPtr++ = uart1Temp;
 115   3                                      uart1.rxLen--;
 116   3                                      if(uart1.rxLen == 0)
C51 COMPILER V7.09   UART                                                                  12/31/2012 14:48:45 PAGE 3   

 117   3                                      {
 118   4                                              REN0 = 0;
 119   4                                              uart1.uartState = UART_RX_FRAME_OK;
 120   4                                      }
 121   3                                      break;
 122   3      
 123   3                              default:
 124   3                                      if(uart1.uartState == UART_RX_FRAME_OK)
 125   3                                              uart1.uartState = 0;
 126   3                                      break;          
 127   3                      }               
 128   2              }
 129   1      
 130   1              if(TI0)
 131   1              {
 132   2                      TI0 = 0;
 133   2                      
 134   2                      if(uart1.txLen != 0)
 135   2                      {
 136   3                              SBUF0 = *uart1.txPtr;
 137   3                              uart1.txPtr++;
 138   3                              uart1.txLen--;
 139   3                      }
 140   2      
 141   2                      else
 142   2                              uart1.txTimer = UART_TX_FRAME_DELAY;
 143   2              }
 144   1      }
 145          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    493    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    530    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
